#!/bin/bash

# Cloudways PHP 7.4 Compatibility Fix Script
# –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –µ—Å–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ PHP 7.4

echo "üîß Fixing PHP 7.4 compatibility issues..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é PHP
PHP_VERSION=$(php -r "echo PHP_VERSION;")
echo "üìã Current PHP version: $PHP_VERSION"

if [[ "$PHP_VERSION" == 7.4* ]]; then
    echo "‚ö†Ô∏è  PHP 7.4 detected. Using compatible version..."
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ composer.json
    if [ -f "composer.json" ]; then
        cp composer.json composer-php82.json
        echo "‚úÖ Backed up original composer.json"
    fi
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º—É—é –≤–µ—Ä—Å–∏—é
    if [ -f "composer-php74.json" ]; then
        cp composer-php74.json composer.json
        echo "‚úÖ Using PHP 7.4 compatible composer.json"
    else
        echo "‚ùå composer-php74.json not found!"
        exit 1
    fi
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo "üßπ Removing old dependencies..."
    rm -rf vendor composer.lock
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo "üì¶ Installing PHP 7.4 compatible dependencies..."
    composer install --no-dev --optimize-autoloader
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ Dependencies installed successfully"
    else
        echo "‚ùå Failed to install dependencies"
        exit 1
    fi
    
else
    echo "‚úÖ PHP version is compatible (8.0+)"
    echo "üì¶ Installing dependencies..."
    composer install --no-dev --optimize-autoloader
fi

# –°–æ–∑–¥–∞–µ–º .env —Ñ–∞–π–ª –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if [ ! -f ".env" ]; then
    echo "üìù Creating .env file..."
    cp .env.example .env
    echo "‚ö†Ô∏è  Please configure your .env file with production settings"
fi

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo "üîë Generating application key..."
php artisan key:generate --force

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
echo "üîê Setting permissions..."
chmod -R 755 storage
chmod -R 755 bootstrap/cache

# –û—á–∏—â–∞–µ–º –∫—ç—à
echo "üßπ Clearing caches..."
php artisan config:clear
php artisan cache:clear
php artisan view:clear
php artisan route:clear

# –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
echo "‚ö° Optimizing for production..."
php artisan config:cache
php artisan route:cache
php artisan view:cache

echo "‚úÖ PHP compatibility fix completed!"
echo ""
echo "üìã Next steps:"
echo "1. Configure your .env file with production settings"
echo "2. Set up your database connection"
echo "3. Run 'php artisan migrate' if needed"
echo "4. Check your website at your domain"
echo "5. Monitor logs with 'tail -f storage/logs/laravel.log'"
echo ""
echo "üåê Your Laravel application should now be running!"
